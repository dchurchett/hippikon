<html>
<head>
<link rel="stylesheet" type="text/css" href="mainstyle.css" />
<title>Hippikon Open Source Authorization API</title>
</head>
<body>

<h2><span class="title">Hippikon</span><br>
Open Source Authorization API for Java Applications</h2>

<div class="sidebar">
<a class="sidebar" href="index.html">Home</a><br>
<a class="sidebar" href="about.htm">About</a><br>
<a class="sidebar" href="overview.htm">Overview</a><br>
<a class="sidebar" href="how-to.htm">Integration</a><br>
<a class="sidebar" href="download.htm">Download</a><br>
<a class="sidebar" href="documentation.htm">Manual</a><br>
<a class="sidebar" href="docs/index.html">Javadocs</a><br>
<a class="sidebar" href="http://sourceforge.net/tracker/?group_id=139356&atid=743293">Bug Reports</a><br>
<a class="sidebar" href="http://www.hippikon.com/forum">User Forum</a><br>
<a class="sidebar" href="http://www.hippikon.com/blog/index.php">Blog</a>
</div>

<div class="sflogo">
<a href="http://sourceforge.net"><img src="http://sourceforge.net/sflogo.php?group_id=139356&amp;type=1" width="88" height="31" border="0" alt="SourceForge.net Logo" /></a>
</div>

<div class="main">
<h2>About Hippikon</h2>
Hippikon was originally designed and implemented for an customizable enterprise software solution 
by Dale Churchett who now runs the Hippikon project and obtained copyright to the original code in order
to create an open source project with it.  The code has been proven in a high volume, high availability 
production environment for over 3 and a half years and was designed to be able to accomodate very complex 
authorization requirement models.<p>

After much research of existing security and authorization designs nothing could be found that would
adequately fit the applications requirements. Sun's JAAS was dismissed due to the static nature of protecting
object methods, the EJB security model was based around roles and object methods, Java's own permissions
model was too static and did not account for runtime decisions and changes in configurations. It was
then decided to create a framework in-house based on the best designs from all these different approaches.<p>

The design philosophy and vision remains true today:<p>

<ul>
<li>Use existing design patterns where available
<li>Use existing problem domain terminology and not invent a new dictionary of terms
<li>Encapsulate as much as the implementation details as possible
<li>Make it extremely hard for developers to bypass or subvert the frameworks intended use
<li>Decopule the framework from any external mechanism, making it widely applicable
<li>Provide tools to help Quality Assurance engineers understand the authorization rules 
<li>Provide a clearly written and understandable set of API documentation and user manual
</ul>

Hippikon proved to be such a sucess that no code was needed to be touched once it was deployed
even as more complex and difficult authorization models were added. It was decided that making
Hippikon available as an open source project would be beneficial to the open source development 
community. A new version has been created from the original source code to remove any specific 
references to the original, and it has been issued under the GNU LGPL license.<p>

I chose the name because I have been playing a lot of 
<a href="http://www.macsoftgames.com/products/age_of_myth/macsoft-aom-page.html">Age of Mythology</a> recently, both the PC
game and the board game with my son. Hippikon is a Greek warrior that rides on horseback is used
in raiding parties, but also is good in defending your territory. I also thought is sounded like a 
good name for an open source project.

<h2>Contributors</h2>

Hippikon was devised, designed and implemented by Dale Churchett, who now maintains and runs the Hippikon
project. He was recently joined by Tim Tishler who is helping out with proof reading, testing, sanity checking
and other open source integration possibilities. If you would like to participate, please 
<script language="javascript">
function hiveware_enkoder(){var i,j,x,y,x=
"x=\"7552%[U44'2<&A|$?z\\\"=x:9h7<;&`797:7A|]9<7:::79:::78:77677:76667779::" +
":797;7:::7777:77777:759::797:7877:78:;787476;79:6787;7787;7;77::75=7:767:7" +
"877;7;7<7677:76797:797:778757:79:7757:7767:7::767;7<777=76:747676767767:7:" +
"76:77497:767776:;67677:;6h7=978:7;f76:<6757:76;j::8::76:f7g7=:7;77:f747h:7" +
"=7:7=:i:9:75:77g:i6<:::78;76=:f7::757<:8;;:787:7:;f;=67478767h7f97:7;74:i:" +
"9;7;7=7h7f6=:7<76:::4;5:7=7:77:7;9479:6796;696::7::;6<69:6:7::::9;7;777:7i" +
"6<;f6=67677:<66;:978:8;7;h;f:787;7=6=67476767gj?+7::78+A}?&`7;7=7=;2|@m978" +
":7?4Am,797:7vs6A/m?77:76lxkri7677:p7gwiry;79::A/}!-7:::7;72|/+)77:75+,ite7" +
":7878760m,v87476xwfyw787elg2|,peziAn?&}#?--7:-5,vxwfyw2|A|?--4,xEvrip2|@m?" +
"4Am,vsj?++A}?xwfyw2|A/}!-45A/m?lxkp2|@m?9Am,vsj#?-90m,vfyw2|A/}!-45A/m?lxk" +
"ri,vxwfyw2}A}#?-90m,vxw*grceugpw?z=))?{=$?-njvipgn0z>k=2?k*tqh=+z*vCgfqEtc" +
"je0z?l}+--k=-{=6;?-l+45>l*hk=4/+k*gfqEtcjEoqth0ipktvU?epacsenu=x;''=y;\\\"" +
"{!+ltgnel.x<i;0=i(rof;)x(tAedoCrahc.x=j{)++i;hy;49=+j)23<j(fi;2-)i(edoCrah" +
"Cmorf.gnirtS=+y})j(\";y='';for(i=0;i<x.length;i+=21){for(j=Math.min(x.leng" +
"th,i+21);--j>=i;){y+=x.charAt(j);}}y;";
while(x=eval(x));}hiveware_enkoder();
</script>
. The current needs of the project include:

<ul>
<li>Developers wishing to use Hippikon in their own projects in order to iron out any kinks
<li>Someone to investigate hooking Hippikon into other open source projects such as JBoss, Resin, Struts and Spring
<li>Someone to draw a nice picture of a Hippikon soldier for the site
</ul>
<p><p>

</body>
</html>
